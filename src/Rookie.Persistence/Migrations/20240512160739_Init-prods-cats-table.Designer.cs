// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rookie.Persistence;

#nullable disable

namespace Rookie.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240512160739_Init-prods-cats-table")]
    partial class Initprodscatstable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rookie.Domain.CategoryEntity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 12, 16, 7, 38, 865, DateTimeKind.Utc).AddTicks(9003));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 12, 16, 7, 38, 865, DateTimeKind.Utc).AddTicks(9673));

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bc12574-4d0a-4f88-8489-dd2f63ac41e5"),
                            CreatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8697),
                            Description = "Shirts for men and women",
                            Name = "Shirts",
                            UpdatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8707)
                        },
                        new
                        {
                            Id = new Guid("35803ab3-5c35-443e-b033-24ccb7aadf0f"),
                            CreatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8716),
                            Description = "Pants for adults",
                            Name = "Pants",
                            UpdatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8717)
                        },
                        new
                        {
                            Id = new Guid("71668136-768d-44f7-9941-5f3795c07442"),
                            CreatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8732),
                            Description = "Shoes all sizes",
                            Name = "Shoes",
                            UpdatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8732)
                        },
                        new
                        {
                            Id = new Guid("2a70de53-a74e-4281-9c5f-960aa3d11d6c"),
                            CreatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8736),
                            Description = "Accessories for women",
                            Name = "Accessories",
                            UpdatedDate = new DateTime(2024, 5, 12, 23, 7, 38, 866, DateTimeKind.Local).AddTicks(8736)
                        });
                });

            modelBuilder.Entity("Rookie.Domain.ProductEntity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 12, 16, 7, 38, 867, DateTimeKind.Utc).AddTicks(1139));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 5, 12, 16, 7, 38, 867, DateTimeKind.Utc).AddTicks(1682));

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Rookie.Domain.ProductEntity.Product", b =>
                {
                    b.HasOne("Rookie.Domain.CategoryEntity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Rookie.Domain.CategoryEntity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
